#!/bin/bash
#
# EC4Docker - Elastic Cluster for Docker
# https://github.com/grycap/ec4docker
#
# Copyright (C) GRyCAP - I3M - UPV 
# Developed by Carlos A. caralla@upv.es
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# We'll get the configuration if it exists
[ -f /etc/ec4docker/ec4docker.conf ] && source /etc/ec4docker/ec4docker.conf

# Set the name of the container that acts as the server
EC4DOCK_SERVERNAME=${EC4DOCK_SERVERNAME:-ec4docker}
EC4DOCK_WN_IMAGENAME=${EC4DOCK_WN_IMAGENAME:-ec4docker:wn}
DOCKERCMD=docker
[ "$EC4DOCK_DOCKER_NODE" != "" ] &&  DOCKERCMD="docker -H $EC4DOCK_DOCKER_NODE"
NETWORK_STR=
IPFIELD="{{.NetworkSettings.IPAddress}}"
[ "$EC4DOCK_DOCKER_NETWORK" != "" ] && NETWORK_STR="--net=$EC4DOCK_DOCKER_NETWORK" && IPFIELD="{{.NetworkSettings.Networks.$EC4DOCK_DOCKER_NETWORK.IPAddress}}"

[ $# -ne 1 ] && echo "usage: $0 <nodenameid>" && exit 1
WN_NAME=$1

# Get the server IP address
EC4DOCK_SERVERIP=$($DOCKERCMD inspect -f "$IPFIELD" $EC4DOCK_SERVERNAME)
[ $? -ne 0 ] && echo "could not get ip from server $EC4DOCK_SERVERNAME" && exit 1

(
# Create a new container
WN_CONTAINERNAME=$($DOCKERCMD run -h $WN_NAME --privileged $EC4DOCK_WN_DOCKER_OPTIONS $NETWORK_STR -e EC4DOCK_WN_DOCKER_OPTIONS="$EC4DOCK_WN_DOCKER_OPTIONS" -e "EC4DOCK_SERVERIP=$EC4DOCK_SERVERIP" -e "EC4DOCK_SERVERNAME=$EC4DOCK_SERVERNAME" --name $WN_NAME -id $EC4DOCK_WN_IMAGENAME)
[ $? -ne 0 ] && echo "could not create the new node $WN_NAME" && exit 1

# We get the IP address for the new node
WN_IPADDR=$($DOCKERCMD inspect -f "$IPFIELD" $WN_CONTAINERNAME)
[ $? -ne 0 -o "$WN_IPADDR" == "" ] && echo "could not determine the IP address for the new node" && $DOCKERCMD rm $($DOCKERCMD stop $WM_CONTAINERNAME) && exit 1

# We have to remove the entries in /etc/hosts that correspond to the node name
cat /etc/hosts | sed "/${WN_NAME}$/d" > /tmp/newhosts 

# Now we add a new entry with the new IP address
echo "$WN_IPADDR $WN_NAME.localdomain $WN_NAME" >> /tmp/newhosts 

# Let's set the new /etc/hosts file
cp /tmp/newhosts /etc/hosts
rm /tmp/newhosts 

# Finally we add the node in the torque server
/opt/ec4docker/add-node $WN_NAME $WN_IPADDR $WN_CONTAINERNAME
)&

exit 0
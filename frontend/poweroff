#!/bin/bash
#
# EC4Docker - Elastic Cluster for Docker
# https://github.com/grycap/ec4docker
#
# Copyright (C) GRyCAP - I3M - UPV 
# Developed by Carlos A. caralla@upv.es
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# We'll get the configuration if it exists
[ -f /etc/ec4docker/ec4docker.conf ] && source /etc/ec4docker/ec4docker.conf
DOCKERCMD=docker
[ "$EC4DOCK_DOCKER_NODE" != "" ] &&  DOCKERCMD="docker -H $EC4DOCK_DOCKER_NODE"

[ $# -ne 1 ] && echo "usage: $0 <nodename>" && exit 1
WN_NAME=$1

# Get info about the node just to test that it exists in docker
$DOCKERCMD inspect $WN_NAME > /dev/null 2> /dev/null
[ $? -ne 0 ] && echo "could not find any container with name $WN_NAME" && exit 1

# We'll stop the node
$DOCKERCMD stop $WN_NAME > /dev/null 2> /dev/null
[ $? -ne 0 ] && echo "could not stop container with name $WN_NAME" && exit 1

(
# Then we delete the node
$DOCKERCMD rm $WN_NAME > /dev/null 2> /dev/null
[ $? -ne 0 ] && echo "could not remove container with name $WN_NAME"

# We have to remove the entries in /etc/hosts that correspond to the node name
cat /etc/hosts | sed "/${WN_NAME}$/d" > /tmp/newhosts 

# Now we add a new entry with the new IP address
echo "127.0.0.1 $WN_NAME.localdomain $WN_NAME" >> /tmp/newhosts 

# Let's set the new /etc/hosts file
cp /tmp/newhosts /etc/hosts
rm /tmp/newhosts 

# Finally we add the node in the torque server
/opt/ec4docker/remove-node $WN_NAME
)&

exit 0